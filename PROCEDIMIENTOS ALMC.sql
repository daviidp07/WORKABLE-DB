USE `workable`;

DELIMITER $$

# CREAR EMPRESA
DROP PROCEDURE IF EXISTS `P_CREATE_EMPRESA`;
$$
CREATE PROCEDURE `P_CREATE_EMPRESA` (
    IN P_NOMBRE VARCHAR(100),
    IN P_DESCRIPCION TEXT,
    IN P_DIRECCION VARCHAR(100),
    IN P_CATEG_ID INT,
    IN P_MUNIC_ID INT
)
BEGIN
    INSERT INTO EMPRESA (NOMBRE, DESCRIPCION, DIRECCION, CATEG_ID, MUNIC_ID)
    VALUES (P_NOMBRE, P_DESCRIPCION, P_DIRECCION, P_CATEG_ID, P_MUNIC_ID);
END$$

DELIMITER ;

DELIMITER $$

# ACTUALIZAR EMPRESA
DROP PROCEDURE IF EXISTS `P_UPDATE_EMPRESA`;
$$
CREATE PROCEDURE `P_UPDATE_EMPRESA` (
    IN P_EMPRE_ID INT,
    IN P_NOMBRE VARCHAR(100),
    IN P_DESCRIPCION TEXT,
    IN P_DIRECCION VARCHAR(100),
    IN P_CATEG_ID INT,
    IN P_MUNIC_ID INT
)
BEGIN
    UPDATE EMPRESA
    SET NOMBRE = P_NOMBRE,
        DESCRIPCION = P_DESCRIPCION,
        DIRECCION = P_DIRECCION,
        CATEG_ID = P_CATEG_ID,
        MUNIC_ID = P_MUNIC_ID
    WHERE
        EMPRE_ID = P_EMPRE_ID;
END$$

DELIMITER ;

DELIMITER $$

# CREAR USUARIO
DROP PROCEDURE IF EXISTS `P_CREATE_USUARIO`;
$$
CREATE PROCEDURE `P_CREATE_USUARIO` (
    IN P_NOMBRE VARCHAR(50),
    IN P_APELLIDO VARCHAR(50),
    IN P_CLAVE VARCHAR(255),
    IN P_DIRECCION VARCHAR(255),
    IN P_CORREO VARCHAR(255),
    IN P_USR_NAME VARCHAR(255),
    IN P_TELEFONO BIGINT,
    IN P_FECHA_NACIM DATE,
    IN P_FOTO_PERFIL VARCHAR(512),
    IN P_GENER_ID BIT,
    IN P_MUNIC_ID INT,
    IN P_EMPRE_ID INT,
    IN P_ROL_ID TINYINT,
    IN P_ID_TIP_DOC INT
)
BEGIN
    DECLARE PWS VARCHAR(50) DEFAULT '12345';
    DECLARE CLAVE_ENC VARBINARY(255);

    SET CLAVE_ENC = AES_ENCRYPT(P_CLAVE, PWS);

    INSERT INTO USUARIO (NOMBRE, APELLIDO, CLAVE, DIRECCION, CORREO, USR_NAME, TELEFONO, FECHA_NACIM, FOTO_PERFIL, GENER_ID, MUNIC_ID, EMPRE_ID, ROL_ID, ID_TIP_DOC)
    VALUES (P_NOMBRE, P_APELLIDO, CLAVE_ENC, P_DIRECCION, P_CORREO, P_USR_NAME, P_TELEFONO, P_FECHA_NACIM, P_FOTO_PERFIL, P_GENER_ID, P_MUNIC_ID, P_EMPRE_ID, P_ROL_ID, P_ID_TIP_DOC);
END$$

DELIMITER ;

DELIMITER $$

# ACTUALIZAR USUARIO
DROP PROCEDURE IF EXISTS `P_UPDATE_USUARIO`;
$$
CREATE PROCEDURE `P_UPDATE_USUARIO` (
    IN P_USR_ID INT,
    IN P_NOMBRE VARCHAR(50),
    IN P_APELLIDO VARCHAR(50),
    IN P_DIRECCION VARCHAR(255),
    IN P_CORREO VARCHAR(255),
    IN P_USR_NAME VARCHAR(255),
    IN P_TELEFONO BIGINT,
    IN P_FECHA_NACIM DATE,
    IN P_FOTO_PERFIL VARCHAR(512),
    IN P_GENER_ID BIT,
    IN P_MUNIC_ID INT
)
BEGIN
    UPDATE USUARIO
    SET NOMBRE = P_NOMBRE,
		APELLIDO = P_APELLIDO,
        DIRECCION = P_DIRECCION,
        CORREO = P_CORREO,
        USR_NAME = P_USR_NAME,
        TELEFONO = P_TELEFONO,
        FECHA_NACIM = P_FECHA_NACIM,
        FOTO_PERFIL = P_FOTO_PERFIL,
        GENER_ID = P_GENER_ID,
        MUNIC_ID = P_MUNIC_ID
    WHERE
        USR_ID = P_USR_ID;
END$$

DELIMITER ;

DELIMITER $$

# CREAR O ACTUALIZAR VALORACION
DROP PROCEDURE IF EXISTS `P_STORE_VALORACION`;
$$
CREATE PROCEDURE `P_STORE_VALORACION` (
    IN P_USR_ID INT,
    IN P_EMPRE_ID INT,
    IN P_PUNTUACION DECIMAL(2,1),
    IN P_DESCRIPCION VARCHAR(255)
)
BEGIN
    IF P_PUNTUACION < 1 OR P_PUNTUACION > 5 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'ERROR: La puntuaci√≥n debe ser entre 1.0 y 5.0.';
    ELSE
        INSERT INTO VALORACION (USR_ID, EMPRE_ID, PUNTUACION, DESCRIPCION, VALR_FECHA)
        VALUES (P_USR_ID, P_EMPRE_ID, P_PUNTUACION, P_DESCRIPCION, CURDATE())
        ON DUPLICATE KEY UPDATE
            PUNTUACION = VALUES(PUNTUACION),
            DESCRIPCION = VALUES(DESCRIPCION),
            VALR_FECHA = CURDATE();
    END IF;
END$$

DELIMITER ;

DELIMITER $$

# ELIMINAR VALORACION
DROP PROCEDURE IF EXISTS `P_DELETE_VALORACION`;
$$
CREATE PROCEDURE `P_DELETE_VALORACION` (
    IN P_USR_ID INT,
    IN P_EMPRE_ID INT
)
BEGIN
    DELETE FROM VALORACION
    WHERE USR_ID = P_USR_ID AND EMPRE_ID = P_EMPRE_ID;
END$$

DELIMITER ;

DELIMITER $$

# ELIMINAR DISCAPACIDAD
DROP PROCEDURE IF EXISTS `P_DELETE_DISCAPACIDAD`;
$$
CREATE PROCEDURE `P_DELETE_DISCAPACIDAD` (
    IN P_USR_ID INT
)
BEGIN
    DELETE FROM USUARIO_DISCAP WHERE USR_ID = P_USR_ID;
END$$

DELIMITER ;

DELIMITER $$

# ASIGNAR DISCAPACIDAD
DROP PROCEDURE IF EXISTS `P_ASSING_DISCAPACIDAD`;
$$
CREATE PROCEDURE `P_ASSING_DISCAPACIDAD` (
    IN P_USR_ID INT,
    IN P_DISCAP_ID TINYINT
)
BEGIN
    INSERT IGNORE INTO USUARIO_DISCAP (USR_ID, DISCAP_ID)
    VALUES (P_USR_ID, P_DISCAP_ID);
END$$

DELIMITER ;

DELIMITER $$

# CREAR ESTUDIO
DROP PROCEDURE IF EXISTS `P_CREATE_ESTUDIO`;
$$
CREATE PROCEDURE `P_CREATE_ESTUDIO` (
    IN P_USR_ID INT,
    IN P_NOMBRE_PROGRAMA VARCHAR(255),
    IN P_FECHA_INI DATE,
    IN P_FECHA_FIN DATE,
    IN P_CERTIFICADO_URL VARCHAR(512),
    IN P_INSTI_ID INT,
    IN P_NIV_EDU_ID INT
)
BEGIN
    INSERT INTO ESTUDIO (USR_ID, NOMBRE_PROGRAMA, FECHA_INI, FECHA_FIN, CERTIFICADO_URL, INSTI_ID, NIV_EDU_ID)
    VALUES (P_USR_ID, P_NOMBRE_PROGRAMA, P_FECHA_INI, P_FECHA_FIN, P_CERTIFICADO_URL, P_INSTI_ID, P_NIV_EDU_ID);
END$$

DELIMITER ;

DELIMITER $$

# ACTUALIZAR ESTUDIO
DROP PROCEDURE IF EXISTS `P_UPDATE_ESTUDIO`;
$$
CREATE PROCEDURE `P_UPDATE_ESTUDIO` (
    IN P_ESTUD_ID INT,
    IN P_USR_ID INT,
    IN P_NOMBRE_PROGRAMA VARCHAR(255),
    IN P_FECHA_INI DATE,
    IN P_FECHA_FIN DATE,
    IN P_CERTIFICADO_URL VARCHAR(512),
    IN P_INSTI_ID INT,
    IN P_NIV_EDU_ID INT
)
BEGIN
    UPDATE ESTUDIO
    SET NOMBRE_PROGRAMA = P_NOMBRE_PROGRAMA,
        FECHA_INI = P_FECHA_INI,
        FECHA_FIN = P_FECHA_FIN,
        CERTIFICADO_URL = P_CERTIFICADO_URL,
        INSTI_ID = P_INSTI_ID,
        NIV_EDU_ID = P_NIV_EDU_ID
    WHERE
        ESTUD_ID = P_ESTUD_ID AND USR_ID = P_USR_ID;
END$$

DELIMITER ;

DELIMITER $$

# ELIMINAR ESTUDIO
DROP PROCEDURE IF EXISTS `P_DELETE_ESTUDIO`;
$$
CREATE PROCEDURE `P_DELETE_ESTUDIO` (
    IN P_ESTUD_ID INT,
    IN P_USR_ID INT
)
BEGIN
    DELETE FROM ESTUDIO WHERE ESTUD_ID = P_ESTUD_ID AND USR_ID = P_USR_ID;
END$$

DELIMITER ;

DELIMITER $$

# CREAR EXPERIENCIA
DROP PROCEDURE IF EXISTS `P_CREATE_EXPERIENCIA`;
$$
CREATE PROCEDURE `P_CREATE_EXPERIENCIA` (
    IN P_USR_ID INT,
    IN P_CARGO VARCHAR(255),
    IN P_NOMB_EMPRE VARCHAR(255),
    IN P_FECHA_INI DATE,
    IN P_FECHA_FIN DATE,
    IN P_DESCRIPCION TEXT,
    IN P_CIUDAD VARCHAR(255),
    IN P_PAIS VARCHAR(255)
)
BEGIN
    INSERT INTO EXPERIENCIA (USR_ID, CARGO, NOMB_EMPRE, FECHA_INI, FECHA_FIN, DESCRIPCION, CIUDAD, PAIS)
    VALUES (P_USR_ID, P_CARGO, P_NOMB_EMPRE, P_FECHA_INI, P_FECHA_FIN, P_DESCRIPCION, P_CIUDAD, P_PAIS);
END$$

DELIMITER ;

DELIMITER $$

# ACTUALIZAR EXPERIENCIA
DROP PROCEDURE IF EXISTS `P_UPDATE_EXPERIENCIA`;
$$
CREATE PROCEDURE `P_UPDATE_EXPERIENCIA` (
    IN P_EXPE_ID INT,
    IN P_USR_ID INT,
    IN P_CARGO VARCHAR(255),
    IN P_NOMB_EMPRE VARCHAR(255),
    IN P_FECHA_INI DATE,
    IN P_FECHA_FIN DATE,
    IN P_DESCRIPCION TEXT,
    IN P_CIUDAD VARCHAR(255),
    IN P_PAIS VARCHAR(255)
)
BEGIN
    UPDATE EXPERIENCIA
    SET CARGO = P_CARGO,
        NOMB_EMPRE = P_NOMB_EMPRE,
        FECHA_INI = P_FECHA_INI,
        FECHA_FIN = P_FECHA_FIN,
        DESCRIPCION = P_DESCRIPCION,
        CIUDAD = P_CIUDAD,
        PAIS = P_PAIS
    WHERE EXPE_ID = P_EXPE_ID AND USR_ID = P_USR_ID;
END$$

DELIMITER ;

DELIMITER $$

# ELIMINAR EXPERIENCIA
DROP PROCEDURE IF EXISTS `P_DELETE_EXPERIENCIA`;
$$
CREATE PROCEDURE `P_DELETE_EXPERIENCIA` (
    IN P_EXPE_ID INT,
    IN P_USR_ID INT
)
BEGIN
    DELETE FROM EXPERIENCIA WHERE EXPE_ID = P_EXPE_ID AND USR_ID = P_USR_ID;
END$$

DELIMITER ;

DELIMITER $$

# CREAR OFERTA
DROP PROCEDURE IF EXISTS `P_CREATE_OFERTA`;
$$
CREATE PROCEDURE `P_CREATE_OFERTA` (
    IN P_EMPRE_ID INT,
    IN P_NOMBRE VARCHAR(100),
    IN P_DESCRIPCION VARCHAR(255),
    IN P_DIRECCION VARCHAR(100),
    IN P_FECHA_PUBLI DATE,
    IN P_FECHA_LIMIT DATE,
    IN P_MODAL_ID INT,
    IN P_TIP_CONT_ID INT,
    IN P_MUNIC_ID INT
)
BEGIN
    INSERT INTO OFERTA (EMPRE_ID, NOMBRE, DESCRIPCION, DIRECCION, FECHA_PUBLI, FECHA_LIMIT, MODAL_ID, TIP_CONT_ID, MUNIC_ID)
    VALUES (P_EMPRE_ID, P_NOMBRE, P_DESCRIPCION, P_DIRECCION, P_FECHA_PUBLI, P_FECHA_LIMIT, P_MODAL_ID, P_TIP_CONT_ID, P_MUNIC_ID);
END$$

DELIMITER ;

DELIMITER $$

# ACTUALIZAR OFERTA
DROP PROCEDURE IF EXISTS `P_UPDATE_OFERTA`;
$$
CREATE PROCEDURE `P_UPDATE_OFERTA` (
    IN P_OFER_ID INT,
    IN P_EMPRE_ID INT,
    IN P_NOMBRE VARCHAR(100),
    IN P_DESCRIPCION VARCHAR(255),
    IN P_DIRECCION VARCHAR(100),
    IN P_FECHA_PUBLI DATE,
    IN P_FECHA_LIMIT DATE,
    IN P_MODAL_ID INT,
    IN P_TIP_CONT_ID INT,
    IN P_MUNIC_ID INT
)
BEGIN
    UPDATE OFERTA
    SET NOMBRE = P_NOMBRE,
        DESCRIPCION = P_DESCRIPCION,
        DIRECCION = P_DIRECCION,
        FECHA_PUBLI = P_FECHA_PUBLI,
        FECHA_LIMIT = P_FECHA_LIMIT,
        MODAL_ID = P_MODAL_ID,
        TIP_CONT_ID = P_TIP_CONT_ID,
        MUNIC_ID = P_MUNIC_ID
    WHERE OFER_ID = P_OFER_ID AND EMPRE_ID = P_EMPRE_ID;
END$$

DELIMITER ;

DELIMITER $$

# ELIMINAR OFERTA
DROP PROCEDURE IF EXISTS `P_DELETE_OFERTA`;
$$
CREATE PROCEDURE `P_DELETE_OFERTA` (
    IN P_OFER_ID INT,
    IN P_EMPRE_ID INT
)
BEGIN
    DELETE FROM OFERTA_BENEFICIOS WHERE OFER_ID = P_OFER_ID;
    DELETE FROM POSTULACIONES WHERE OFER_ID = P_OFER_ID;
    DELETE FROM OFERTA WHERE OFER_ID = P_OFER_ID AND EMPRE_ID = P_EMPRE_ID;
END$$

DELIMITER ;

DELIMITER $$

# ELIMINAR BENEFICIOS DE UNA OFERTA
DROP PROCEDURE IF EXISTS `P_CLEAN_OFERTA_BENEFICIOS`;
$$
CREATE PROCEDURE `P_CLEAN_OFERTA_BENEFICIOS` (
    IN P_OFER_ID INT
)
BEGIN
    DELETE FROM OFERTA_BENEFICIOS WHERE OFER_ID = P_OFER_ID;
END$$

DELIMITER ;

DELIMITER $$

# ASIGNAR UN BENEFICIO A UNA OFERTA
DROP PROCEDURE IF EXISTS `P_ASSIGN_OFERTA_BENEFICIO`;
$$
CREATE PROCEDURE `P_ASSIGN_OFERTA_BENEFICIO` (
    IN P_OFER_ID INT,
    IN P_BENEF_ID INT
)
BEGIN
    INSERT IGNORE INTO OFERTA_BENEFICIOS (OFER_ID, BENEF_ID)
    VALUES (P_OFER_ID, P_BENEF_ID);
END$$

DELIMITER ;

DELIMITER $$

# CREAR POSTULACION
DROP PROCEDURE IF EXISTS `P_CREATE_POSTULACION`;
$$
CREATE PROCEDURE `P_CREATE_POSTULACION` (
    IN P_USR_ID INT,
    IN P_OFER_ID INT
)
BEGIN
    DECLARE V_ESTADO_INICIAL INT DEFAULT 1;

    INSERT INTO POSTULACIONES (USR_ID, OFER_ID, ESTAD_ID, FECHA_POST)
    VALUES (P_USR_ID, P_OFER_ID, V_ESTADO_INICIAL, CURDATE());

    SELECT LAST_INSERT_ID() AS POSTUL_ID;
END$$

DELIMITER ;

DELIMITER $$

# ACTUALIZAR ESTADO DE POSTULACION por la empresa
DROP PROCEDURE IF EXISTS `P_UPDATE_POSTULACION_ESTADO`;
$$
CREATE PROCEDURE `P_UPDATE_POSTULACION_ESTADO` (
    IN P_POSTUL_ID INT,
    IN P_NUEVO_ESTAD_ID INT,
    IN P_EMPRE_ID_VERIFICACION INT
)
BEGIN
    UPDATE POSTULACIONES AS P
    JOIN OFERTA AS O ON P.OFER_ID = O.OFER_ID
    SET
        P.ESTAD_ID = P_NUEVO_ESTAD_ID
    WHERE
        P.POSTUL_ID = P_POSTUL_ID AND O.EMPRE_ID = P_EMPRE_ID_VERIFICACION;
END$$

DELIMITER ;

DELIMITER $$

# ELIMINAR POSTULACION
DROP PROCEDURE IF EXISTS `P_DELETE_POSTULACION`;
$$
CREATE PROCEDURE `P_DELETE_POSTULACION` (
    IN P_POSTUL_ID INT,
    IN P_USR_ID INT
)
BEGIN
    DELETE FROM POSTULACIONES
    WHERE POSTUL_ID = P_POSTUL_ID AND USR_ID = P_USR_ID;
END$$

DELIMITER ;